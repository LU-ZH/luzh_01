1.新建一个HelloController；

2.编写 Spring Boot 启动项；

3.进行访问测试，默认端口号8080；

----------------------------------

我们要使用第三方的json解析框架的话：
1.我们需要在pom.xml中引入相应的以来；
2.
    1)需要在App.java中继承WebMvcConfigurerAdapter
        重写方法：configureMessageConverters
        添加我们自己定义的json解析框架
    2)@Bean注入第三方json解析框架

-----------------------------------------

1.我们修改了方法的返回值，是能够进行热部署的；
2.我们重新创建一个方法，是能够进行热部署的；
3.我们重新创建了一个Class，是能够进行热部署的；


------------------------------------------------
Spring Boot -- Spring Data JPA 总结 -- 持久化操作
1.需要添加相应的依赖包；
2.需要在application.properties文件添加配置信息；
3.需要创建一个实体类，比如cat；
4.需要创建一个接口继承CrudRepository；
5.需要创建一个Service接口；
6.需要创建一个Controller；
7.代码测试；



-----------------------------------------------------

代码 404
确认访问地址是否正确：
    1.确认端口号，默认是8080，这个可以在启动时的控制台察看
    2.确认访问的URI地址是否填写正确，这个可以在启动时的控制台是否映射
确定注解是否正确，使用@RestController而不是@ResponseBody
    另外@RestController等价于@Controller和@ResponseBody
确定包的路径是否正确
    我们需要知道的是：Spring Boot默认情况下可以扫描的是
    @SpringBootApplication所在的类的同包或者子包下的类
确定类引入的包的路径是否正确

问题的提出：1.默认的端口号是8080，那么如何进行修改为80或者8081？
          2.如何配置上写文（项目的名称）？http://172.0.0.1:8080/springboot/hello



-----------------------------------------------------------------------

在springBoot中如何使用模版引擎的步骤：
1.在pom.xml文件添加相应的依赖包，thymeleaf和freemarker；
2.在application.properties文件中添加配置信息，开发过程建议关闭缓存；
3.编写模版文件，thymeleaf的后缀是.html，freemarker的默认后缀是.ftl；
4.编写模版文件的Controller建议请求映射地址；

------------------------------------------------------------
同时我们知道了：thymeleaf和freemarker可以并存使用
